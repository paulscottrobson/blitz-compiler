# *******************************************************************************************
# *******************************************************************************************
#
#		Name : 		errors.py
#		Purpose :	Error Generators
#		Date :		13th April 2023
#		Author : 	Paul Robson (paul@robsons.org.uk)
#
# *******************************************************************************************
# *******************************************************************************************

import os,sys,math,re

errors = """
	range 		  : out of range
	value 		  : bad value
	syntax 		  : syntax error
	type 		  : type mismatch 
	unimplemented : not implemented
	assert 		  : assert fail
	line 		  : unknown line number
	internal	  : internal error
	divzero 	  : divide by zero
	structure 	  : structure imbalance
	stop 		  : program stopped
	data		  : out of data
	undeclared	  : unknown array
	redefine 	  : array redefined
	index 		  : bad array index
	memory 		  : out of memory
	channel 	  : input/output error
	
""".strip().split("\n")

h1 = open("source/generated/errors.inc","w")
h2 = open("source/generated/errors.asm","w")
h1.write(";\n;\tThis file is automatically generated.\n;\n")
h2.write(";\n;\tThis file is automatically generated.\n;\n")
h2.write("\t.section code\n")
for e in errors:
	e = [x.strip() for x in e.split(":")]
	h1.write("error_{0} .macro\n\tjmp\tErrorV_{0}\n\t.endm\n".format(e[0]))
	h2.write("ErrorV_{0}:\n\tjsr\tCallErrorHandler\n\t.text\t\"{1}\",0\n".format(e[0],e[1].upper()))
h2.write("\t.send code\n")
h1.close()
h2.close()
	