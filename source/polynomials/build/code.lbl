C64_NOT		= $a8
PCD_CMD_SHIFT	= $ca
C64_PSET	= $ce87
C64_DIVIDE	= $ad
PCD_COS		= $ca88
FloatIsZero	= $568b
PCD_SLEEP	= $ca98
ExpCoefficients	= $56de
PCD_PEEK	= $ab
C64_BVERIFY	= $ce97
PCD_CMD_GOTOCMD_NZ= $d3
PCD_SCMD_CMP	= $94
FloatInt8Multiply= $5307
C64_FMFREQ	= $ce9e
C64_REM		= $8f
C64_STRPTR	= $ced9
C64_MIDDOLLAR	= $ca
C64_BLOAD	= $ce95
C64_I2CPOKE	= $ceae
C64_CLR		= $9c
C64_CLS		= $ce90
PCD_SYS		= $ca92
FloatToString	= $5551
PCD_CMD_VARSPACE= $d4
FPAssertCheck	= $5044
digitTemp	= $423
C64_FMVIB	= $ce9d
C64_COLOR	= $ce8d
PCD_CONCAT	= $b5
C64_OPEN	= $9f
PCD_ASSERT	= $90
PCD_INTCMD_DIV	= $a4
C64_TAN		= $c0
PCD_LESS	= $89
MemoryStorage	= $400
ErrorV_assert	= $5a37
ErrorV_undeclared= $5aba
C64_LEFTDOLLAR	= $c8
PCD_INT		= $ca84
SinCoefficients	= $5707
ErrorV_redefine	= $5acb
FloatNegate	= $562b
PCD_SIN		= $ca89
C64_STEP	= $a9
C64_BINDOLLAR	= $ced6
PCD_EXP		= $ca87
PCD_FMFREQ	= $ca9e
CompareLess	= $512e
C64_GET		= $a1
PCD_MY		= $ca8f
Const_sqrt_2	= $5796
FloatScalarTable= $517b
PCD_MIDDOLLAR	= $bd
Const_Log2_e	= $5791
PCD_MB		= $ca8d
PCD_INPUTDOLLAR	= $a0
PCD_LEN		= $a2
MoveObjectForward= $5b18
C64_RETURN	= $8e
NSSIInt16	= $20
C64_FRAME	= $ce89
C64_SPCLB	= $a6
LogCoefficients	= $572b
C64_PSGINIT	= $cea4
C64_LOCATE	= $ce92
decimalCount	= $424
PCD_BINDOLLAR	= $91
C64_AND		= $af
ErrorV_channel	= $5b02
C64_VLOAD	= $ce85
FloatEncodeStart= $5449
CoreSine	= $5992
C64_JOY		= $ced4
PCD_VAL		= $c2
PCD_TI		= $bf
C64_OLD		= $ce82
C64_DOS		= $ce81
PCD_PRINTCMD_S	= $b1
C64_POWEROFF	= $cead
C64_POINTER	= $ced8
C64_EXP		= $bd
C64_TEST	= $ce8e
Const_Base	= $5787
C64_CLOSE	= $a0
C64_FOR		= $81
ConvertInt16	= $55d8
C64_STRDOLLAR	= $c4
C64_LOG		= $bc
PCD_STARTSYSTEM	= $ca
NSSString	= $40
PCD_FMNOTE	= $ca9a
PCD_CMD_GOTO	= $d0
ErrorV_internal	= $5a5d
decimalPlaces	= $425
CalculateHornerPolynomial= $5816
PCD_INPUTCMD_START= $a1
NSMantissa0	= $2e
C64_HELP	= $ceb6
NSMantissa2	= $46
NSMantissa3	= $52
PCD_POWER	= $84
PCD_LESSEQUAL	= $8c
xValueSlot	= $448
FloatArcTan	= $5694
C64_FMDRUM	= $ce9b
C64_HEXDOLLAR	= $ced5
PCD_ARRAY	= $8e
C64_VERIFY	= $95
PCD_NEXT	= $a7
C64_REBOOT	= $ceac
C64_WAIT	= $92
PCD_POKE	= $ac
PCD_FRE		= $96
PCD_FMINIT	= $ca99
PCD_DEBUG	= $c5
PCD_DIVIDE	= $83
C64_LINPUTHASH	= $ceb4
C64_POKE	= $97
ReturnTrue	= $511c
PCD_FMVOL	= $ca9f
C64_FRE		= $b8
C64_PLUS	= $aa
FloatShiftRight	= $5682
PCD_CMD_GOSUB	= $d1
PCD_CMD_FLOAT	= $cd
PCD_RND		= $b4
PCD_MOREON	= $aa
ErrorV_value	= $59f6
C64_LINPUT	= $ceb3
C64_READ	= $87
C64_TIMES	= $ac
C64_END		= $80
CorePolySquared	= $5996
FloatNegateMantissa= $5632
PCD_READDOLLAR	= $b3
C64_PEEK	= $c2
ErrorV_range	= $59e6
PCD_RIGHTDOLLAR	= $bc
PCD_BANK	= $ca97
C64_INT		= $b5
CoreAtn		= $56d7
PCD_ATN		= $ca8b
ErrorV_structure= $5a81
C64_BOOT	= $ce93
PCD_CLOSE	= $c3
PCD_FRAME	= $9c
FloatPI		= $592a
FloatAdd	= $508d
ErrorV_stop	= $5a98
C64_FMINST	= $ce9c
FloatDivide	= $51b2
ConvertInt32	= $55e8
C64_RESTORE	= $8c
PCD_PSGWAV	= $caa7
C64_PSGPAN	= $cea9
PCD_PRINTCMD_CHR= $92
FPPushConstant	= $5054
PCD_SGN		= $b6
C64_EQUAL	= $b2
PCD_TIMES	= $82
PCD_I2CPOKE	= $ca95
C64_NEXT	= $82
C64_GO		= $cb
ErrorV_unimplemented= $5a24
C64_RIGHTDOLLAR	= $c9
CompareNotEqual	= $5128
PCD_MOUSE	= $ca8c
PCD_GET		= $97
C64_LET		= $88
PCD_VPEEK	= $c9
PCD_TIDOLLARCMD_WRITE= $ca93
PCD_GETCHANNEL	= $ae
C64_RECT	= $ce8a
dbOffset	= $426
C64_LOAD	= $93
C64_THEN	= $a7
C64_FMVOL	= $ce9f
C64_DATA	= $83
C64_SIN		= $bf
C64_BINPUTHASH	= $ceb5
AtnCoefficients	= $5745
FloatSetZero	= $5669
PCD_FMPLAY	= $caa1
PCD_FMPOKE	= $caa3
PCD_USR		= $c1
CompletePolynomial= $5842
Const_PiDiv2	= $578c
C64_GOSUB	= $8d
FloatExponent	= $57bb
PCD_PRINTCMD_SPC= $b9
FloatTangent	= $59c0
C64_ASC		= $c6
PCD_LINE	= $9a
C64_PSGPLAY	= $ceaa
C64_LIST	= $9b
PCD_ASC		= $8f
PCD_TAN		= $ca8a
zTemp2		= $72
zTemp0		= $6e
zTemp1		= $70
PCD_ON		= $a9
PCD_OR		= $86
FloatDivideCheck= $523f
PCD_VPOKE	= $c8
PCD_JOY		= $ca83
PCD_MINUS	= $81
PCD_INPUT	= $9f
encodeState	= $422
C64_RND		= $bb
LoadConstant	= $5899
objPtr		= $6c
PCD_AND		= $85
TestScript	= $100b
C64_REN		= $ceb2
C64_GREATER	= $b1
FloatCompare	= $514e
NSMantissa1	= $3a
MOFSizeTable	= $5b5c
C64_USR		= $b7
C64_LINE	= $ce88
C64_RUN		= $8a
FloatSetZeroMantissaOnly= $5665
C64_MENU	= $ceb1
C64_SLEEP	= $ceaf
FPAbs		= $5051
PCD_PSGINIT	= $caa4
C64_RPTDOLLAR	= $ceda
PCD_COLOR	= $caae
C64_PRINT	= $99
PCD_ENDSYSTEM	= $d5
PCD_CLR		= $ca80
FloatRotateLeft	= $5679
PCD_SQR		= $ca85
PCD_PRINTCMD_TAB= $b7
PCD_MX		= $ca8e
CodeStart	= $1000
ErrorHandler	= $100a
PCD_EXIT	= $c4
C64_KEYMAP	= $ce94
C64_DEF		= $96
PCD_WAIT	= $ca94
PCD_OPEN	= $c6
C64_FMPLAY	= $cea1
PCD_PSGNOTE	= $caa5
C64_CMD		= $9d
PCD_NEWCMD_LINE	= $a6
PCD_CHAR	= $9d
FloatCosine	= $57af
C64_IF		= $8b
FloatSubTopTwoStack= $540f
PCD_SETCHANNEL	= $af
PCD_PLUS	= $80
FloatSine	= $594f
C64_MINUS	= $ab
FloatInt32Add	= $5429
FloatZero13	= $5671
CompareGreater	= $5136
FloatEncodeContinue= $544c
Const_1Div2Pi	= $5787
MakePlusTwoString= $55ab
C64_VPOKE	= $ce84
PCD_CMD_BYTE	= $cb
C64_SCREEN	= $ce86
PCD_PRINTCMD_POS= $b8
FloatSubtract	= $5087
C64_NEW		= $a2
PCD_CHRDOLLAR	= $93
PCD_READ	= $b2
FloatIntegerPartDown= $52c8
C64_TO		= $a4
C64_MB		= $ced3
Const_ln_e	= $57aa
C64_FMPAN	= $cea0
PCD_FOR		= $95
C64_LEN		= $c3
ErrorV_type	= $5a13
CopyFloatXY	= $584d
PCD_NOT		= $a8
C64_GOTO	= $89
PCD_LOG		= $ca86
PCD_FMINST	= $ca9c
ESTA_Low	= 1
FloatIntegerPart= $52a4
C64_MY		= $ced2
C64_MX		= $ced1
numberBuffer	= $400
ESTA_Decimal	= 3
C64_CONT	= $9a
CoreExponent	= $580e
C64_SYS		= $9e
WrapperBoot	= $1000
PCD_CMD_DATA	= $cf
FloatShiftLeft	= $5678
C64_MOUSE	= $ce8c
PCD_SCREEN	= $c7
PCD_STOP	= $ca91
PCD_TIDOLLAR	= $c0
PCD_PSGFREQ	= $caa8
PCD_FMVIB	= $ca9d
FloatSetByte	= $566b
FloatAddTopTwoStack= $53f5
ErrorV_divzero	= $5a6f
ErrorV_syntax	= $5a03
FloatSquareRoot	= $59b4
ESTAShiftDigitIntoMantissa= $5511
PCD_CMD_WORD	= $cc
C64_PSGNOTE	= $cea5
PCD_PSGPLAY	= $caaa
C64_COS		= $be
C64_BSAVE	= $ceb0
C64_CODEX	= $ce91
FloatSetMantissa= $566d
DivideInt32	= $51dc
C64_SGN		= $b4
PCD_RECT	= $9b
PCD_ABS		= $8d
C64_ATN		= $c1
C64_INPUT	= $85
C64_PSGWAV	= $cea7
FloatLogarithm	= $58be
PCD_DIM		= $ca81
C64_ON		= $91
C64_VAL		= $c5
PCD_SWAP	= $be
Const_half	= $57a5
PCD_EQUAL	= $88
ZeroPageMandatory= $22
ErrorV_data	= $5aab
C64_OR		= $b0
NSSArray	= $80
CompareLessEqual= $513e
PCD_LOCATE	= $caad
PCD_ENDBINARY	= $8d
C64_VPEEK	= $ced0
PCD_I2CPEEK	= $ca96
PCD_STARTCOMMAND= $8d
C64_BANK	= $ce98
PCD_FCMD_CMP	= $a3
C64_RESET	= $ce8f
PCD_PSGPAN	= $caa9
ReturnFalse	= $5125
PCD_PRINTCMD_N	= $b0
CompareEqual	= $5118
C64_I2CPEEK	= $ced7
C64_TABLB	= $a3
C64_POWER	= $ae
PCD_STARTBINARY	= $80
FloatMultiplyShort= $5376
CompareGreaterEqual= $5146
C64_SAVE	= $94
C64_MON		= $ce80
C64_CHAR	= $ce8b
FloatShiftUpTwo	= $564c
C64_PRINTHASH	= $98
C64_FN		= $a5
NSMCopyPlusTwoToZero= $51ee
C64_DIM		= $86
C64_INPUTHASH	= $84
PCD_END		= $ca82
decimalBuffer	= $427
NSSTypeMask	= $40
C64_POS		= $b9
NSStatus	= $22
MathStackSize	= 12
C64_PSGCHORD	= $ceab
PCD_CMD_STRING	= $ce
ErrorV_line	= $5a46
C64_FMNOTE	= $ce9a
C64_GEOS	= $ce83
FloatCalculateSign= $53b4
PCD_HEXDOLLAR	= $9e
Const_sqrt_half	= $579b
PCD_LEFTDOLLAR	= $bb
PCD_ENDCOMMAND	= $ca
GetCoefficient	= $586c
FloatNormalise	= $53be
codePtr		= $6a
PCD_RESTORE	= $ca90
FloatFractionalPart= $5249
C64_FMCHORD	= $cea2
C64_FMPOKE	= $cea3
FloatEncode	= $544d
Int32Divide	= $51ff
C64_LESS	= $b3
PCD_RETURN	= $98
C64_SQR		= $ba
PCD_STRDOLLAR	= $ba
PCD_FMDRUM	= $ca9b
C64_BVLOAD	= $ce96
PCD_CMD_GOTOCMD_Z= $d2
C64_ABS		= $b6
PCD_FMCHORD	= $caa2
PCD_FMPAN	= $caa0
PCD_CLS		= $caac
FloatMultiply	= $5329
C64_CHRDOLLAR	= $c7
C64_FMINIT	= $ce99
FloatPower	= $5932
ErrorV_index	= $5ade
PCD_GREATER	= $87
PCD_PSGVOL	= $caa6
PCD_PSET	= $99
PCD_POS		= $ad
NSExponent	= $5e
C64_PSGFREQ	= $cea8
WriteDecimalBuffer= $55c9
ErrorV_memory	= $5af1
NSSIFloat	= $00
coefficientCount= $447
C64_PSGVOL	= $cea6
Const_pi	= $57a0
PCD_LESSGREATER	= $8b
ESTA_High	= 2
CoreLog		= $5923
PCD_GREATEREQUAL= $8a
Int32ShiftDivide= $5221
PCD_PSGCHORD	= $caab
C64_STOP	= $90
PCD_NEGATE	= $a5
