# *******************************************************************************************
# *******************************************************************************************
#
#		Name : 		genmapping.py
#		Purpose :	Create words that call functionality.
#		Date :		11th April 2023
#		Author : 	Paul Robson (paul@robsons.org.uk)
#
# *******************************************************************************************
# *******************************************************************************************
#
#		Columns are : Operator, Function and Check Carry on Exit
#
mappings = """
		+		FloatAdd
		- 		FloatSubtract
		* 		FloatMultiply
		/ 		FloatDivide 				*
		^ 		FloatPower 					*
		>		CompareGreater
		=		CompareEqual
		<		CompareLess
		>=		CompareGreaterEqual
		<>		CompareNotEqual
		<=		CompareLessEqual
		int 	FloatIntegerPartDown
		sqr 	FloatSquareRoot 			*
		log 	FloatLogarithm 				*
		exp 	FloatExponent
		cos		FloatCosine
		sin 	FloatSine
		tan 	FloatTangent
		atn		FloatArcTan 				*
		f.cmp 	FloatCompare
		int.div DivideInt32 				*
"""

mappings = [x.strip() for x in mappings.split("\n") if x.strip() != ""]

print(";\n;\tThis file is automatically generated\n;")
print("\t.section code")

for m in mappings:
	m = m.split()
	toShift = "!" if len(m[0]) == 3 else ""
	print("Link{0}: ;; [{1}]".format(m[1],toShift+m[0]))
	print("\t.entercmd")
	print("\tphy")
	print("\tjsr\t{0}".format(m[1]))
	if len(m) == 3:
		print("\tbcs\t{0}".format("DivZeroError" if m[0] == "/" else "MapRangeError"))
	print("\tply")
	print("\t.exitcmd")	

	if m[0] == "sqr":
		print("MapRangeError:")
		print("\t.error_range")
		print("DivZeroError:")
		print("\t.error_divzero")



print("\t.send code")
