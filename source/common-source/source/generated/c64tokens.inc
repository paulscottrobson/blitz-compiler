;
;	This file is automatically generated.
;
C64_END                  = $80 ; $80 end
C64_FOR                  = $81 ; $81 for
C64_NEXT                 = $82 ; $82 next
C64_DATA                 = $83 ; $83 data
C64_INPUTHASH            = $84 ; $84 input#
C64_INPUT                = $85 ; $85 input
C64_DIM                  = $86 ; $86 dim
C64_READ                 = $87 ; $87 read
C64_LET                  = $88 ; $88 let
C64_GOTO                 = $89 ; $89 goto
C64_RUN                  = $8a ; $8a run
C64_IF                   = $8b ; $8b if
C64_RESTORE              = $8c ; $8c restore
C64_GOSUB                = $8d ; $8d gosub
C64_RETURN               = $8e ; $8e return
C64_REM                  = $8f ; $8f rem
C64_STOP                 = $90 ; $90 stop
C64_ON                   = $91 ; $91 on
C64_WAIT                 = $92 ; $92 wait
C64_LOAD                 = $93 ; $93 load
C64_SAVE                 = $94 ; $94 save
C64_VERIFY               = $95 ; $95 verify
C64_DEF                  = $96 ; $96 def
C64_POKE                 = $97 ; $97 poke
C64_PRINTHASH            = $98 ; $98 print#
C64_PRINT                = $99 ; $99 print
C64_CONT                 = $9a ; $9a cont
C64_LIST                 = $9b ; $9b list
C64_CLR                  = $9c ; $9c clr
C64_CMD                  = $9d ; $9d cmd
C64_SYS                  = $9e ; $9e sys
C64_OPEN                 = $9f ; $9f open
C64_CLOSE                = $a0 ; $a0 close
C64_GET                  = $a1 ; $a1 get
C64_NEW                  = $a2 ; $a2 new
C64_TABLB                = $a3 ; $a3 tab(
C64_TO                   = $a4 ; $a4 to
C64_FN                   = $a5 ; $a5 fn
C64_SPCLB                = $a6 ; $a6 spc(
C64_THEN                 = $a7 ; $a7 then
C64_NOT                  = $a8 ; $a8 not
C64_STEP                 = $a9 ; $a9 step
C64_PLUS                 = $aa ; $aa +
C64_MINUS                = $ab ; $ab -
C64_TIMES                = $ac ; $ac *
C64_DIVIDE               = $ad ; $ad /
C64_POWER                = $ae ; $ae ^
C64_AND                  = $af ; $af and
C64_OR                   = $b0 ; $b0 or
C64_GREATER              = $b1 ; $b1 >
C64_EQUAL                = $b2 ; $b2 =
C64_LESS                 = $b3 ; $b3 <
C64_SGN                  = $b4 ; $b4 sgn
C64_INT                  = $b5 ; $b5 int
C64_ABS                  = $b6 ; $b6 abs
C64_USR                  = $b7 ; $b7 usr
C64_FRE                  = $b8 ; $b8 fre
C64_POS                  = $b9 ; $b9 pos
C64_SQR                  = $ba ; $ba sqr
C64_RND                  = $bb ; $bb rnd
C64_LOG                  = $bc ; $bc log
C64_EXP                  = $bd ; $bd exp
C64_COS                  = $be ; $be cos
C64_SIN                  = $bf ; $bf sin
C64_TAN                  = $c0 ; $c0 tan
C64_ATN                  = $c1 ; $c1 atn
C64_PEEK                 = $c2 ; $c2 peek
C64_LEN                  = $c3 ; $c3 len
C64_STRDOLLAR            = $c4 ; $c4 str$
C64_VAL                  = $c5 ; $c5 val
C64_ASC                  = $c6 ; $c6 asc
C64_CHRDOLLAR            = $c7 ; $c7 chr$
C64_LEFTDOLLAR           = $c8 ; $c8 left$
C64_RIGHTDOLLAR          = $c9 ; $c9 right$
C64_MIDDOLLAR            = $ca ; $ca mid$
C64_GO                   = $cb ; $cb go
C64_PI                   = $ff ; $ff pi
C64_MON                  = $ce80 ; $ce80 mon
C64_DOS                  = $ce81 ; $ce81 dos
C64_OLD                  = $ce82 ; $ce82 old
C64_GEOS                 = $ce83 ; $ce83 geos
C64_VPOKE                = $ce84 ; $ce84 vpoke
C64_VLOAD                = $ce85 ; $ce85 vload
C64_SCREEN               = $ce86 ; $ce86 screen
C64_PSET                 = $ce87 ; $ce87 pset
C64_LINE                 = $ce88 ; $ce88 line
C64_FRAME                = $ce89 ; $ce89 frame
C64_RECT                 = $ce8a ; $ce8a rect
C64_CHAR                 = $ce8b ; $ce8b char
C64_MOUSE                = $ce8c ; $ce8c mouse
C64_COLOR                = $ce8d ; $ce8d color
C64_TEST                 = $ce8e ; $ce8e test
C64_RESET                = $ce8f ; $ce8f reset
C64_CLS                  = $ce90 ; $ce90 cls
C64_CODEX                = $ce91 ; $ce91 codex
C64_LOCATE               = $ce92 ; $ce92 locate
C64_BOOT                 = $ce93 ; $ce93 boot
C64_KEYMAP               = $ce94 ; $ce94 keymap
C64_BLOAD                = $ce95 ; $ce95 bload
C64_BVLOAD               = $ce96 ; $ce96 bvload
C64_BVERIFY              = $ce97 ; $ce97 bverify
C64_BANK                 = $ce98 ; $ce98 bank
C64_FMINIT               = $ce99 ; $ce99 fminit
C64_FMNOTE               = $ce9a ; $ce9a fmnote
C64_FMDRUM               = $ce9b ; $ce9b fmdrum
C64_FMINST               = $ce9c ; $ce9c fminst
C64_FMVIB                = $ce9d ; $ce9d fmvib
C64_FMFREQ               = $ce9e ; $ce9e fmfreq
C64_FMVOL                = $ce9f ; $ce9f fmvol
C64_FMPAN                = $cea0 ; $cea0 fmpan
C64_FMPLAY               = $cea1 ; $cea1 fmplay
C64_FMCHORD              = $cea2 ; $cea2 fmchord
C64_FMPOKE               = $cea3 ; $cea3 fmpoke
C64_PSGINIT              = $cea4 ; $cea4 psginit
C64_PSGNOTE              = $cea5 ; $cea5 psgnote
C64_PSGVOL               = $cea6 ; $cea6 psgvol
C64_PSGWAV               = $cea7 ; $cea7 psgwav
C64_PSGFREQ              = $cea8 ; $cea8 psgfreq
C64_PSGPAN               = $cea9 ; $cea9 psgpan
C64_PSGPLAY              = $ceaa ; $ceaa psgplay
C64_PSGCHORD             = $ceab ; $ceab psgchord
C64_REBOOT               = $ceac ; $ceac reboot
C64_POWEROFF             = $cead ; $cead poweroff
C64_I2CPOKE              = $ceae ; $ceae i2cpoke
C64_SLEEP                = $ceaf ; $ceaf sleep
C64_BSAVE                = $ceb0 ; $ceb0 bsave
C64_MENU                 = $ceb1 ; $ceb1 menu
C64_REN                  = $ceb2 ; $ceb2 ren
C64_LINPUT               = $ceb3 ; $ceb3 linput
C64_LINPUTHASH           = $ceb4 ; $ceb4 linput#
C64_BINPUTHASH           = $ceb5 ; $ceb5 binput#
C64_HELP                 = $ceb6 ; $ceb6 help
C64_BANNER               = $ceb7 ; $ceb7 banner
C64_EXEC                 = $ceb8 ; $ceb8 exec
C64_TILE                 = $ceb9 ; $ceb9 tile
C64_EDIT                 = $ceba ; $ceba edit
C64_VPEEK                = $ced0 ; $ced0 vpeek
C64_MX                   = $ced1 ; $ced1 mx
C64_MY                   = $ced2 ; $ced2 my
C64_MB                   = $ced3 ; $ced3 mb
C64_JOY                  = $ced4 ; $ced4 joy
C64_HEXDOLLAR            = $ced5 ; $ced5 hex$
C64_BINDOLLAR            = $ced6 ; $ced6 bin$
C64_I2CPEEK              = $ced7 ; $ced7 i2cpeek
C64_POINTER              = $ced8 ; $ced8 pointer
C64_STRPTR               = $ced9 ; $ced9 strptr
C64_RPTDOLLAR            = $ceda ; $ceda rpt$
C64_MWHEEL               = $cedb ; $cedb mwheel
