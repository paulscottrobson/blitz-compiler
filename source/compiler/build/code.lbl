WriteCodeByte	= $900
PCD_CMD_STRING	= $ce
CommandON	= $1493
decimalBuffer	= $53e
C64_NOT		= $a8
PCD_CMD_SHIFT	= $ca
C64_PSET	= $ce87
C64_DIVIDE	= $ad
PCD_COS		= $ca88
FloatIsZero	= $1ec7
PCD_SLEEP	= $ca98
PushIntegerA	= $a29
PCD_PEEK	= $ab
C64_BVERIFY	= $ce97
OutputIndexGroup= $ba7
PCD_CMD_GOTOCMD_NZ= $d3
CCFalse		= $128a
PCD_VPOKE	= $c8
C64_FMFREQ	= $ce9e
PCD_FCMD_CMP	= $a3
C64_STRPTR	= $ced9
C64_MIDDOLLAR	= $ca
CommandGetBody	= $12c0
C64_I2CPOKE	= $ceae
C64_CLR		= $9c
C64_CLS		= $ce90
MakePlusTwoString= $1de7
PCD_SYS		= $ca92
FloatInt8Multiply= $1b43
FloatToString	= $1d8d
PCD_CMD_VARSPACE= $d4
PCD_ENDBINARY	= $8d
SaveName	= $8a6
PCD_BINDOLLAR	= $91
C64_FMVIB	= $ce9d
C64_COLOR	= $ce8d
CheckNextComma	= $95e
numberPCode	= $50d
C64_OPEN	= $9f
SetErrorHandler	= $1738
ProcessNewLine	= $91a
FloatFractionalPart= $1a85
C64_TAN		= $c0
PCD_LESS	= $89
CompareEqual	= $1954
FixBranches	= $d2c
MemoryStorage	= $400
CheckNextA	= $968
CommandGET	= $12ac
PCD_INT		= $ca84
C64_FN		= $a5
ErrorV_redefine	= $1827
PCD_FMFREQ	= $ca9e
PCD_SIN		= $ca89
C64_PRINT	= $99
PCD_STRDOLLAR	= $ba
srcInputPtr	= $22
FloatNegate	= $1e67
PCD_EXP		= $ca87
C64_GOTO	= $89
C64_GET		= $a1
PCD_MY		= $ca8f
PCD_MX		= $ca8e
DivideInt32	= $1a18
FloatZero13	= $1ead
ExtractVariableName= $12db
CommandINPUTStream= $13a3
PCD_FMDRUM	= $ca9b
PCD_MIDDOLLAR	= $bd
CCTrue		= $1288
CompareGreaterEqual= $1982
digitTemp	= $53a
PCD_MB		= $ca8d
NSMantissa1	= $48
PCD_INPUTDOLLAR	= $a0
PCD_LEN		= $a2
MoveObjectForward= $1874
C64_RETURN	= $8e
NSSIInt16	= $20
C64_FRAME	= $ce89
C64_SPCLB	= $a6
stringPCode	= $50e
PCD_RETURN	= $98
C64_PSGINIT	= $cea4
C64_LOCATE	= $ce92
PCD_MOREON	= $aa
C64_BINDOLLAR	= $ced6
ErrorV_channel	= $185e
PCD_INPUTCMD_START= $a1
TestAPI		= $811
PCD_SWAP	= $be
C64_JOY		= $ced4
PCD_VAL		= $c2
CommandREM	= $15ef
C64_OLD		= $ce82
C64_DOS		= $ce81
PCD_PRINTCMD_S	= $b1
C64_POWEROFF	= $cead
FloatShiftRight	= $1ebe
IndexCount	= $50c
BLC_CLOSEOUT	= 4
C64_EXP		= $bd
C64_FMCHORD	= $cea2
C64_FOR		= $81
PCD_CLOSE	= $c3
ConvertInt16	= $1e14
C64_STRDOLLAR	= $c4
C64_LOG		= $bc
ConvertInt32	= $1e24
PCD_STARTSYSTEM	= $ca
ErrorV_internal	= $17b9
CompileBranchCommand= $1346
PCD_CONCAT	= $b5
PCD_CMD_GOTO	= $d0
PrecedenceTable	= $cc3
GetReferenceTerm= $15b7
bufferSize	= $402
ErrorV_assert	= $1793
C64_HELP	= $ceb6
NSMantissa2	= $54
NSMantissa3	= $60
PCD_POWER	= $84
PCD_LESSEQUAL	= $8c
PCD_CMD_WORD	= $cc
LookNext	= $125a
C64_GO		= $cb
C64_FMDRUM	= $ce9b
PCD_ASC		= $8f
PCD_ARRAY	= $8e
C64_VERIFY	= $95
PCD_NEXT	= $a7
NSMCopyPlusTwoToZero= $1a2a
C64_REBOOT	= $ceac
C64_WAIT	= $92
C64_GREATER	= $b1
GetNextNonSpace	= $1276
PCD_DEBUG	= $c5
PCD_TI		= $bf
BLC_OPENIN	= 0
PCD_DIVIDE	= $83
C64_STEP	= $a9
C64_POKE	= $97
ReturnTrue	= $1958
PCD_FMVOL	= $ca9f
C64_FRE		= $b8
AllocateBytesForType= $ab0
C64_PLUS	= $aa
BLC_RESETOUT	= 3
PCD_CMD_GOSUB	= $d1
PCD_CMD_FLOAT	= $cd
PCD_RND		= $b4
C64_LINPUT	= $ceb3
C64_READ	= $87
C64_END		= $80
WriteDecimalBuffer= $1e05
ChannelPrefix	= $1207
FloatNegateMantissa= $1e6e
PCD_READDOLLAR	= $b3
C64_PEEK	= $c2
CharIsAlpha	= $128c
PCD_FMPOKE	= $caa3
PCD_RIGHTDOLLAR	= $bc
PCD_BANK	= $ca97
C64_INT		= $b5
C64_POINTER	= $ced8
C64_LINPUTHASH	= $ceb4
compilerEndHigh	= $508
ErrorV_structure= $17dd
CommandOPEN	= $16f4
CommandGOSUB	= $1333
C64_POWER	= $ae
FloatAdd	= $18c9
ErrorV_stop	= $17f4
C64_FMINST	= $ce9c
FloatDivide	= $19ee
C64_RESTORE	= $8c
StartCompiler	= $977
PCD_INTCMD_DIV	= $a4
C64_PSGPAN	= $cea9
C64_LEN		= $c3
PCD_TIMES	= $82
PCD_I2CPOKE	= $ca95
ChannelPostfix	= $1222
C64_NEXT	= $82
CommandLET	= $13af
ErrorV_undeclared= $1816
ErrorV_unimplemented= $1780
C64_RIGHTDOLLAR	= $c9
ESTA_Low	= 1
C64_POS		= $b9
CompareNotEqual	= $1964
PCD_MOUSE	= $ca8c
BufferClear	= $937
PCD_GET		= $97
C64_LET		= $88
PCD_VPEEK	= $c9
PCD_CHRDOLLAR	= $93
PCD_TIDOLLARCMD_WRITE= $ca93
EndProgram	= $1ed0
FNCompile	= $df5
lineNumberTable	= $50f
UnaryTables	= $1002
CommandCMD	= $16e1
C64_LOAD	= $93
C64_THEN	= $a7
PCD_DIM		= $ca81
PCD_SCMD_CMP	= $94
FloatMultiply	= $1b65
APISaveMemory	= $884
checkCharacter	= $503
C64_DATA	= $83
C64_SIN		= $bf
FloatScalarTable= $19b7
C64_BINPUTHASH	= $ceb5
CommandINPUT	= $138f
CallAPIHandler	= $a13
PCD_FMPLAY	= $caa1
PrintCharacter	= $90d
GeneratorProcess= $10fc
FloatAddTopTwoStack= $1c31
CommandDEF	= $ae8
CompareGreater	= $1972
PCD_ATN		= $ca8b
C64_GOSUB	= $8d
C64_BOOT	= $ce93
C64_SYS		= $9e
FloatSetZero	= $1ea5
CommandGOAlt	= $1339
StartWorkSpace	= $8000
PCD_LINE	= $9a
SetVariableRecordToCodePosition= $aa0
C64_PSGPLAY	= $ceaa
C64_LIST	= $9b
C64_EQUAL	= $b2
PCD_TAN		= $ca8a
zTemp2		= $2e
zTemp0		= $2a
zTemp1		= $2c
PCD_ON		= $a9
CompileExpressionAtA= $c18
PCD_OR		= $86
FloatDivideCheck= $1a7b
LookNextNonSpace= $125d
C64_BLOAD	= $ce95
PCD_MINUS	= $81
FindVariable	= $cd0
PCD_INPUT	= $9f
encodeState	= $539
C64_RND		= $bb
PCodeMemory	= $a000
PCD_FRAME	= $9c
objPtr		= $28
CommandDATA	= $acc
FloatEncodeStart= $1c85
PCD_AND		= $85
FloatSubTopTwoStack= $1c4b
C64_REN		= $ceb2
BufferOutput	= $947
C64_REM		= $8f
CommandDIM	= $b5f
C64_USR		= $b7
C64_RUN		= $8a
FloatSetZeroMantissaOnly= $1ea1
C64_MENU	= $ceb1
APIVector	= $505
PCD_FMINIT	= $ca99
PCD_PSGINIT	= $caa4
PCD_FRE		= $96
CompilerErrorHandler= $bcf
PCD_GETCHANNEL	= $ae
PCD_FMVIB	= $ca9d
compilerStartHigh= $507
PCD_ENDSYSTEM	= $d5
PCD_CLR		= $ca80
PCD_CLS		= $caac
PCD_SQR		= $ca85
PCD_PRINTCMD_TAB= $b7
PCD_PRINTCMD_SPC= $b9
PCD_EXIT	= $c4
C64_KEYMAP	= $ce94
C64_DEF		= $96
CreateVariableRecord= $a5b
PCD_WAIT	= $ca94
BufferWrite	= $93b
PCD_OPEN	= $c6
C64_FMPLAY	= $cea1
PCD_PSGNOTE	= $caa5
C64_CMD		= $9d
PCD_NEWCMD_LINE	= $a6
PCD_CHAR	= $9d
STRFindLine	= $140d
STRMakeOffset	= $145d
PCD_NEGATE	= $a5
ErrorHandlerVector= $515
PCD_SETCHANNEL	= $af
STRReset	= $15fa
PCD_PLUS	= $80
PCD_ASSERT	= $90
C64_MINUS	= $ab
FloatInt32Add	= $1c65
PCD_COLOR	= $caae
FloatRotateLeft	= $1eb5
PCD_PSGPLAY	= $caaa
ParseConstant	= $14bf
PCD_POKE	= $ac
CharIsDigit	= $1280
CommandFOR	= $d91
C64_RPTDOLLAR	= $ceda
C64_VPOKE	= $ce84
PCD_CMD_BYTE	= $cb
C64_SCREEN	= $ce86
PCD_PRINTCMD_POS= $b8
FloatSubtract	= $18c3
C64_NEW		= $a2
CompileExpressionAt0= $c16
PCD_READ	= $b2
FloatIntegerPartDown= $1b04
C64_TO		= $a4
C64_MB		= $ced3
PCD_PSGWAV	= $caa7
C64_FMPAN	= $cea0
PCD_FOR		= $95
ErrorV_type	= $176f
C64_CONT	= $9a
variableListEnd	= $511
PCD_NOT		= $a8
PCD_LOG		= $ca86
ReadNextLine	= $85f
ErrorV_value	= $1752
FloatIntegerPart= $1ae0
C64_MY		= $ced2
C64_MX		= $ced1
CommandIF	= $135c
CallErrorHandler= $173f
numberBuffer	= $517
ESTA_Decimal	= 3
C64_STOP	= $90
PCD_END		= $ca82
PCD_CMD_DATA	= $cf
ExitCompiler	= $a0e
C64_MOUSE	= $ce8c
PCD_SCREEN	= $c7
CommandLETHaveFirst= $13b2
PCD_TIDOLLAR	= $c0
CommandNEXT	= $1467
MainCompileLoop	= $9b8
FloatSetByte	= $1ea7
CDReadWriteVariable= $b52
C64_AND		= $af
GeneratorExecute= $1142
ErrorV_syntax	= $175f
ESTAShiftDigitIntoMantissa= $1d4d
NSSString	= $40
PCD_PSGFREQ	= $caa8
C64_HEXDOLLAR	= $ced5
C64_PSGNOTE	= $cea5
FloatEncodeContinue= $1c88
BLC_WRITEOUT	= 5
C64_COS		= $be
C64_BSAVE	= $ceb0
C64_VLOAD	= $ce85
C64_CODEX	= $ce91
decimalCount	= $53b
FloatSetMantissa= $1ea9
FloatMultiplyShort= $1bb2
defType		= $509
CommandReadInputCommon= $1531
GEXCompileExpression= $11f7
CommandWAIT	= $16bb
InlineNonDecimal= $8ae
PCD_RECT	= $9b
APIDesc		= $80d
C64_IF		= $8b
PCD_ABS		= $8d
C64_ATN		= $c1
dbOffset	= $53d
srcPtr		= $24
C64_INPUT	= $85
C64_PSGWAV	= $cea7
PushFloatCommand= $a38
CompareLess	= $196a
GetNext		= $126b
C64_ON		= $91
defVariable	= $50a
C64_VAL		= $c5
C64_SGN		= $b4
CompileGotoEOL	= $137b
NotUnaryCompile	= $1248
PCD_JOY		= $ca83
WrapperBoot	= $801
PCD_EQUAL	= $88
ZeroPageMandatory= $22
FloatCompare	= $198a
C64_OR		= $b0
NSSArray	= $80
decimalPlaces	= $53c
CompareLessEqual= $197a
currentLineNumber= $400
PCD_LOCATE	= $caad
C64_ASC		= $c6
PCD_STOP	= $ca91
C64_VPEEK	= $ced0
ConvertHexStyle	= $1296
PCD_I2CPEEK	= $ca96
PCD_STARTCOMMAND= $8d
C64_BANK	= $ce98
C64_LINE	= $ce88
C64_RESET	= $ce8f
PCD_PSGPAN	= $caa9
STRMarkLine	= $13e4
ReturnFalse	= $1961
dataBuffer	= $403
PCD_PRINTCMD_N	= $b0
GetSetVariable	= $1569
BLC_READIN	= 2
C64_I2CPEEK	= $ced7
C64_TABLB	= $a3
SaveCodeAndExit	= $9f0
PCD_STARTBINARY	= $80
ErrorV_divzero	= $17cb
FloatShiftLeft	= $1eb4
C64_SAVE	= $94
C64_RECT	= $ce8a
C64_MON		= $ce80
C64_CHAR	= $ce8b
C64_BVLOAD	= $ce96
C64_PRINTHASH	= $98
MOFSizeTable	= $18b8
OptionalParameterCompile= $1229
C64_DIM		= $86
C64_INPUTHASH	= $84
EndWorkspace	= $9f00
PCD_FMINST	= $ca9c
ErrorV_range	= $1742
NSSTypeMask	= $40
CommandGOTO	= $1340
FloatCalculateSign= $1bf0
NSStatus	= $30
MathStackSize	= 12
BLC_CLOSEIN	= 1
C64_PSGCHORD	= $ceab
C64_SLEEP	= $ceaf
ErrorV_line	= $17a2
C64_FMNOTE	= $ce9a
C64_GEOS	= $ce83
GetLineNumber	= $8f9
C64_TIMES	= $ac
PCD_HEXDOLLAR	= $9e
CommandPRINT	= $14e4
PCD_LEFTDOLLAR	= $bb
PCD_ENDCOMMAND	= $ca
FloatNormalise	= $1bfa
codePtr		= $26
PCD_RESTORE	= $ca90
PCD_PRINTCMD_CHR= $92
C64_FMPOKE	= $cea3
FloatEncode	= $1c89
Int32Divide	= $1a3b
CommandTables	= $e34
C64_LESS	= $b3
C64_SQR		= $ba
MidFailType	= $1245
CompileTerm	= $1622
PCD_CMD_GOTOCMD_Z= $d2
PushIntegerYA	= $a16
C64_ABS		= $b6
PCD_FMCHORD	= $caa2
PCD_FMPAN	= $caa0
C64_FMVOL	= $ce9f
CheckNextLParen	= $966
C64_CHRDOLLAR	= $c7
C64_FMINIT	= $ce99
CommandREAD	= $152d
C64_CLOSE	= $a0
ErrorV_index	= $183a
PCD_GREATER	= $87
PCD_PSGVOL	= $caa6
PCD_PSET	= $99
PCD_POS		= $ad
NSExponent	= $6c
C64_PSGFREQ	= $cea8
FloatShiftUpTwo	= $1e88
compilerSP	= $504
C64_TEST	= $ce8e
CheckNextRParen	= $962
ErrorV_memory	= $184d
BLC_PRINTCHAR	= 6
NSSIFloat	= $00
NSMantissa0	= $3c
C64_PSGVOL	= $cea6
PCD_LESSGREATER	= $8b
ESTA_High	= 2
ErrorV_data	= $1807
C64_LEFTDOLLAR	= $c8
PCD_USR		= $c1
freeVariableMemory= $513
PCD_GREATEREQUAL= $8a
Int32ShiftDivide= $1a5d
PCD_PSGCHORD	= $caab
PCD_SGN		= $b6
CodeStart	= $801
PCD_FMNOTE	= $ca9a
