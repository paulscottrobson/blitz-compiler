WriteCodeByte	= $10da
PCD_CMD_STRING	= $ce
CommandON	= $1c5f
decimalBuffer	= $53c
C64_NOT		= $a8
PCD_CMD_SHIFT	= $ca
C64_PSET	= $ce87
C64_DIVIDE	= $ad
PCD_COS		= $ca88
FloatIsZero	= $2689
PushIntegerA	= $11eb
BLC_RESETOUT	= 3
C64_BVERIFY	= $ce97
BLC_READ	= 2
OutputIndexGroup= $136e
PCD_CMD_GOTOCMD_NZ= $d3
CCFalse		= $1a4d
PCD_VPOKE	= $c8
C64_FMFREQ	= $ce9e
objIncrement	= $2c
C64_STRPTR	= $ced9
C64_MIDDOLLAR	= $ca
CommandGetBody	= $1a83
C64_I2CPOKE	= $ceae
C64_CLR		= $9c
C64_CLS		= $ce90
MakePlusTwoString= $25a9
PCD_SYS		= $ca92
FloatInt8Multiply= $2305
FloatToString	= $254f
PCD_CMD_VARSPACE= $d4
PCD_ENDBINARY	= $8d
SaveName	= $1080
PCD_BINDOLLAR	= $91
C64_FMVIB	= $ce9d
C64_COLOR	= $ce8d
CheckNextComma	= $1132
numberPCode	= $50d
C64_OPEN	= $9f
ProcessNewLine	= $10ee
FloatFractionalPart= $2247
C64_TAN		= $c0
FixBranches	= $14f4
MemoryStorage	= $400
PCD_FRAME	= $9c
PCD_SLEEP	= $ca98
CheckNextA	= $113c
CommandGET	= $1a6f
PCD_INT		= $ca84
PCD_RIGHTDOLLAR	= $bc
ErrorV_redefine	= $1fe9
PCD_FMFREQ	= $ca9e
PCD_SIN		= $ca89
C64_PRINT	= $99
PCD_STRDOLLAR	= $ba
srcInputPtr	= $22
FloatNegate	= $2629
C64_GOTO	= $89
PCD_MY		= $ca8f
PCD_MX		= $ca8e
DivideInt32	= $21da
FloatZero13	= $266f
ExtractVariableName= $1a9e
CommandINPUTStream= $1b66
PCD_FMDRUM	= $ca9b
PCD_MIDDOLLAR	= $bd
CCTrue		= $1a4b
CompareGreaterEqual= $2144
digitTemp	= $538
PCD_MB		= $ca8d
NSMantissa1	= $4b
PCD_INPUTDOLLAR	= $a0
PCD_LEN		= $a2
MoveObjectForward= $2036
CompareGreater	= $2134
NSSIInt16	= $20
objPage		= $2b
C64_FRAME	= $ce89
C64_SPCLB	= $a6
stringPCode	= $50e
PCD_RETURN	= $98
C64_PSGINIT	= $cea4
C64_LOCATE	= $ce92
PCD_MOREON	= $aa
C64_AND		= $af
ErrorV_channel	= $2020
PCD_INPUTCMD_START= $a1
C64_VLOAD	= $ce85
PCD_SWAP	= $be
APIORewind	= $1046
C64_JOY		= $ced4
PCD_VAL		= $c2
CommandREM	= $1dbb
C64_OLD		= $ce82
C64_DOS		= $ce81
PCD_PRINTCMD_S	= $b1
C64_POWEROFF	= $cead
FloatShiftRight	= $2680
IndexCount	= $50c
BLC_CLOSEOUT	= 4
C64_EXP		= $bd
C64_TEST	= $ce8e
C64_FOR		= $81
PCD_CLOSE	= $c3
ConvertInt16	= $25d6
C64_STRDOLLAR	= $c4
C64_LOG		= $bc
PCD_STARTSYSTEM	= $ca
ErrorV_internal	= $1f7b
CompileBranchCommand= $1b09
CompareNotEqual	= $2126
PCD_CONCAT	= $b5
PCD_CMD_GOTO	= $d0
PrecedenceTable	= $148b
decimalPlaces	= $53a
bufferSize	= $402
ErrorV_assert	= $1f55
C64_HELP	= $ceb6
NSMantissa2	= $57
NSMantissa3	= $63
PCD_POWER	= $84
PCD_LESSEQUAL	= $8c
PCD_CMD_WORD	= $cc
LookNext	= $1a1d
APIOWriteByte	= $1051
C64_GO		= $cb
C64_FMDRUM	= $ce9b
C64_RETURN	= $8e
PCD_ARRAY	= $8e
C64_VERIFY	= $95
PCD_NEXT	= $a7
NSMCopyPlusTwoToZero= $21ec
C64_REBOOT	= $ceac
C64_WAIT	= $92
C64_GREATER	= $b1
GetNextNonSpace	= $1a39
PCD_DEBUG	= $c5
PCD_TI		= $bf
BLC_OPENIN	= 0
PCD_DIVIDE	= $83
C64_STEP	= $a9
C64_POKE	= $97
ReturnTrue	= $211a
PCD_FMVOL	= $ca9f
C64_FRE		= $b8
AllocateBytesForType= $1277
C64_PLUS	= $aa
PCD_FRE		= $96
PCD_CMD_GOSUB	= $d1
PCD_CMD_FLOAT	= $cd
PCD_RND		= $b4
C64_LINPUT	= $ceb3
C64_READ	= $87
C64_END		= $80
WriteDecimalBuffer= $25c7
ChannelPrefix	= $19cc
FloatNegateMantissa= $2630
PCD_READDOLLAR	= $b3
C64_PEEK	= $c2
CharIsAlpha	= $1a4f
C64_PSGVOL	= $cea6
PCD_BANK	= $ca97
PCodeStart	= $4000
C64_INT		= $b5
C64_POINTER	= $ced8
C64_LINPUTHASH	= $ceb4
compilerEndHigh	= $508
ErrorV_structure= $1f9f
CommandOPEN	= $1ec0
CommandGOSUB	= $1af6
C64_POWER	= $ae
C64_MY		= $ced2
FloatAdd	= $208b
ErrorV_stop	= $1fb6
C64_FMINST	= $ce9c
FloatDivide	= $21b0
ConvertInt32	= $25e6
C64_RESTORE	= $8c
PCD_PEEK	= $ab
StartCompiler	= $114b
PCD_INTCMD_DIV	= $a4
PCD_WAIT	= $ca94
PCD_PRINTCMD_TAB= $b7
PushFloat	= $11fa
C64_PSGPAN	= $cea9
PCD_TIMES	= $82
PCD_I2CPOKE	= $ca95
ChannelPostfix	= $19e6
C64_NEXT	= $82
CommandLET	= $1b72
ErrorV_undeclared= $1fd8
ErrorV_unimplemented= $1f42
C64_RIGHTDOLLAR	= $c9
ESTA_Low	= 1
C64_POS		= $b9
PCD_SCMD_CMP	= $94
PCD_MOUSE	= $ca8c
C64_PSGNOTE	= $cea5
BufferClear	= $110b
PCD_GET		= $97
C64_LET		= $88
PCD_VPEEK	= $c9
PCD_TIDOLLARCMD_WRITE= $ca93
EndProgram	= $2692
FNCompile	= $15bb
lineNumberTable	= $50f
UnaryTables	= $17c8
CommandCMD	= $1ead
C64_LOAD	= $93
C64_THEN	= $a7
FloatMultiply	= $2327
APISaveMemory	= $105e
checkCharacter	= $503
C64_DATA	= $83
C64_SIN		= $bf
FloatScalarTable= $2179
C64_BINPUTHASH	= $ceb5
CommandINPUT	= $1b52
CallAPIHandler	= $11d5
PCD_FMPLAY	= $caa1
PCD_FMPOKE	= $caa3
PCD_LESS	= $89
PrintCharacter	= $10e4
GeneratorProcess= $18c2
FloatAddTopTwoStack= $23f3
CommandDEF	= $12af
PCD_ATN		= $ca8b
C64_GOSUB	= $8d
PCD_PRINTCMD_SPC= $b9
C64_BOOT	= $ce93
C64_SYS		= $9e
FloatSetZero	= $2667
CommandGOAlt	= $1afc
StartWorkSpace	= $8000
C64_BINDOLLAR	= $ced6
SetVariableRecordToCodePosition= $1262
C64_PSGPLAY	= $ceaa
C64_LIST	= $9b
C64_EQUAL	= $b2
PCD_TAN		= $ca8a
APIOPrintCharacter= $105a
zTemp2		= $31
zTemp0		= $2d
zTemp1		= $2f
PCD_ON		= $a9
CompileExpressionAtA= $13e0
PCD_OR		= $86
FloatDivideCheck= $223d
LookNextNonSpace= $1a20
PCD_MINUS	= $81
FindVariable	= $1498
PCD_INPUT	= $9f
encodeState	= $537
C64_RND		= $bb
objPtr		= $29
CommandDATA	= $1293
FloatEncodeStart= $2447
PCD_RECT	= $9b
BLC_ADJUSTOBJECT= 6
FloatSubTopTwoStack= $240d
C64_REN		= $ceb2
BufferOutput	= $111b
C64_REM		= $8f
CommandDIM	= $1326
C64_USR		= $b7
C64_RUN		= $8a
FloatSetZeroMantissaOnly= $2663
APIVector	= $505
PCD_LESSGREATER	= $8b
PCD_PSGINIT	= $caa4
C64_GET		= $a1
GetReferenceTerm= $1d83
PCD_COLOR	= $caae
PCD_GETCHANNEL	= $ae
PCD_FMVIB	= $ca9d
compilerStartHigh= $507
PCD_ENDSYSTEM	= $d5
PCD_CLR		= $ca80
PCD_CLS		= $caac
PCD_SQR		= $ca85
C64_SCREEN	= $ce86
ErrorHandler	= $1396
PCD_EXIT	= $c4
C64_KEYMAP	= $ce94
C64_DEF		= $96
CreateVariableRecord= $121d
PCD_FCMD_CMP	= $a3
BufferWrite	= $110f
PCD_OPEN	= $c6
C64_FMPLAY	= $cea1
PCD_PSGNOTE	= $caa5
C64_CMD		= $9d
PCD_NEWCMD_LINE	= $a6
PCD_LINE	= $9a
PCD_CHAR	= $9d
STRFindLine	= $1bd5
STRMakeOffset	= $1c29
PCD_NEGATE	= $a5
APIOClose	= $100e
PCD_SETCHANNEL	= $af
STRReset	= $1dc6
PCD_PLUS	= $80
PCD_ASSERT	= $90
C64_MINUS	= $ab
FloatInt32Add	= $2427
FloatRotateLeft	= $2677
PCD_PSGPLAY	= $caaa
ParseConstant	= $1c8b
PCD_POKE	= $ac
CharIsDigit	= $1a43
CommandFOR	= $1557
C64_RPTDOLLAR	= $ceda
C64_VPOKE	= $ce84
PCD_CMD_BYTE	= $cb
C64_LINE	= $ce88
PCD_PRINTCMD_POS= $b8
FloatSubtract	= $2085
C64_NEW		= $a2
CompileExpressionAt0= $13de
PCD_READ	= $b2
FloatIntegerPartDown= $22c6
C64_TO		= $a4
CompareEqual	= $2116
C64_MB		= $ced3
PCD_PSGWAV	= $caa7
C64_FMPAN	= $cea0
PCD_FOR		= $95
C64_LEN		= $c3
ErrorV_type	= $1f31
variableListEnd	= $511
APIIClose	= $1020
PCD_NOT		= $a8
APIIOpen	= $1018
PCD_LOG		= $ca86
ReadNextLine	= $1021
ErrorV_value	= $1f14
FloatIntegerPart= $22a2
C64_MX		= $ced1
CommandIF	= $1b1f
numberBuffer	= $515
ESTA_Decimal	= 3
C64_CONT	= $9a
PCD_END		= $ca82
PCD_CMD_DATA	= $cf
ExitCompiler	= $11d0
C64_MOUSE	= $ce8c
PCD_SCREEN	= $c7
CommandLETHaveFirst= $1b75
PCD_TIDOLLAR	= $c0
CommandNEXT	= $1c33
MainCompileLoop	= $1181
FloatSetByte	= $2669
CDReadWriteVariable= $1319
GeneratorExecute= $1908
ErrorV_syntax	= $1f21
ESTAShiftDigitIntoMantissa= $250f
NSSString	= $40
PCD_PSGFREQ	= $caa8
C64_HEXDOLLAR	= $ced5
FloatEncodeContinue= $244a
BLC_WRITEOUT	= 5
C64_COS		= $be
C64_BSAVE	= $ceb0
C64_CODEX	= $ce91
decimalCount	= $539
FloatSetMantissa= $266b
CommandWAIT	= $1e87
defType		= $509
CommandReadInputCommon= $1cfd
GEXCompileExpression= $19bc
C64_SGN		= $b4
InlineNonDecimal= $1088
codePage	= $28
APIDesc		= $100a
C64_IF		= $8b
PCD_ABS		= $8d
dbOffset	= $53b
FloatMultiplyShort= $2374
srcPtr		= $24
C64_INPUT	= $85
C64_PSGWAV	= $cea7
PCD_DIM		= $ca81
CompareLess	= $212c
C64_MENU	= $ceb1
GetNext		= $1a2e
C64_ON		= $91
defVariable	= $50a
C64_VAL		= $c5
CompileGotoEOL	= $1b3e
NotUnaryCompile	= $1a0b
PCD_JOY		= $ca83
WrapperBoot	= $1000
PCD_EQUAL	= $88
ZeroPageMandatory= $22
FloatCompare	= $214c
C64_OR		= $b0
NSSArray	= $80
CompareLessEqual= $213c
currentLineNumber= $400
PCD_LOCATE	= $caad
PCD_EXP		= $ca87
C64_ASC		= $c6
PCD_STOP	= $ca91
C64_ATN		= $c1
C64_VPEEK	= $ced0
ConvertHexStyle	= $1a59
PCD_I2CPEEK	= $ca96
PCD_STARTCOMMAND= $8d
C64_BANK	= $ce98
PCD_CHRDOLLAR	= $93
C64_RESET	= $ce8f
PCD_PSGPAN	= $caa9
STRMarkLine	= $1ba7
ReturnFalse	= $2123
dataBuffer	= $403
PCD_PRINTCMD_N	= $b0
GetSetVariable	= $1d35
CommandTables	= $15fa
C64_I2CPEEK	= $ced7
C64_TABLB	= $a3
SaveCodeAndExit	= $11b7
PCD_STARTBINARY	= $80
ErrorV_divzero	= $1f8d
FloatShiftLeft	= $2676
C64_SAVE	= $94
C64_RECT	= $ce8a
C64_MON		= $ce80
C64_CHAR	= $ce8b
C64_BVLOAD	= $ce96
C64_PRINTHASH	= $98
MOFSizeTable	= $207a
C64_FN		= $a5
OptionalParameterCompile= $19ec
C64_DIM		= $86
C64_INPUTHASH	= $84
EndWorkspace	= $9f00
PCD_FMINST	= $ca9c
ErrorV_range	= $1f04
NSSTypeMask	= $40
CommandGOTO	= $1b03
FloatCalculateSign= $23b2
NSStatus	= $33
MathStackSize	= 12
BLC_CLOSEIN	= 1
C64_PSGCHORD	= $ceab
PCD_AND		= $85
C64_SLEEP	= $ceaf
ErrorV_line	= $1f64
PCD_FMINIT	= $ca99
C64_FMNOTE	= $ce9a
C64_GEOS	= $ce83
GetLineNumber	= $10d3
C64_TIMES	= $ac
PCD_HEXDOLLAR	= $9e
CommandPRINT	= $1cb0
PCD_LEFTDOLLAR	= $bb
PCD_ENDCOMMAND	= $ca
FloatNormalise	= $23bc
APIOOpen	= $1046
codePtr		= $26
PCD_RESTORE	= $ca90
PCD_PRINTCMD_CHR= $92
C64_FMCHORD	= $cea2
C64_FMPOKE	= $cea3
FloatEncode	= $244b
Int32Divide	= $21fd
C64_BLOAD	= $ce95
C64_LESS	= $b3
C64_SQR		= $ba
MidFailType	= $1a08
CompileTerm	= $1dee
PCD_CMD_GOTOCMD_Z= $d2
PushIntegerYA	= $11d8
C64_ABS		= $b6
PCD_FMCHORD	= $caa2
PCD_FMPAN	= $caa0
PCD_ASC		= $8f
C64_FMVOL	= $ce9f
CheckNextLParen	= $113a
C64_CHRDOLLAR	= $c7
C64_FMINIT	= $ce99
CommandREAD	= $1cf9
C64_CLOSE	= $a0
ErrorV_index	= $1ffc
PCD_GREATER	= $87
PCD_PSGVOL	= $caa6
PCD_PSET	= $99
PCD_POS		= $ad
NSExponent	= $6f
C64_PSGFREQ	= $cea8
FloatShiftUpTwo	= $264a
compilerSP	= $504
CheckNextRParen	= $1136
ErrorV_memory	= $200f
BLC_PRINTCHAR	= 7
NSSIFloat	= $00
NSMantissa0	= $3f
C64_STOP	= $90
ESTA_High	= 2
ErrorV_data	= $1fc9
C64_LEFTDOLLAR	= $c8
PCD_USR		= $c1
freeVariableMemory= $513
PCD_GREATEREQUAL= $8a
Int32ShiftDivide= $221f
PCD_PSGCHORD	= $caab
PCD_SGN		= $b6
CodeStart	= $1000
PCD_FMNOTE	= $ca9a
